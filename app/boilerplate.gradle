import java.nio.file.Paths
import java.nio.file.Path
import java.nio.file.Files
import java.nio.file.StandardCopyOption
import java.util.stream.Stream

class FileGenerator extends DefaultTask {
    String customUiPackagePath
    String featureName
    String uiPlaceholderPath
    String domainPlaceholderPath
    String testViewModelPlaceholderPath
    String testUseCasePlaceholderPath
    final String placeholdername = "Placeholder"

    @TaskAction
    void createNewFeature() {
        def destinationDirectoryPath = "${customUiPackagePath}/${featureName}"
        def featureDirectory = new File(destinationDirectoryPath)
        featureDirectory.mkdir()

        copyFilesToNewDirectory(uiPlaceholderPath, destinationDirectoryPath)

    }

    void copyFilesToNewDirectory(sourceDir, destinationDir) {
        File[] files = new File(sourceDir).listFiles()

        for (File file : files) {
            if (file.isFile()) {
                System.out.println(file.getName())
                def fileName = file.getName().replaceAll(placeholdername, featureName)

                def destinationFilePath = "${destinationDir}/${fileName}"
                Files.copy(Paths.get(file.getPath()), Paths.get(destinationFilePath), StandardCopyOption.REPLACE_EXISTING)
                System.out.println("copied file from ${file.toPath()} to ${destinationFilePath}")
                updateFiles(destinationFilePath, featureName)
            }
        }
    }
    void updateFiles(String targetFilePath, String targetString) {
        try {
            Path path = Paths.get(targetFilePath)
            Stream<String> lines = Files.lines(path)
            List <String> replaced = []
            for(String line : lines){
                replaced.add(line.replaceAll(placeholdername, targetString.toCa))
            }
            for(String line : replaced){
                replaced.add(line.replaceAll(placeholdername.toLowerCase(), targetString.toLowerCase()))
            }

            Files.write(path, replaced)
            lines.close()
            System.out.println("Find and Replace done!!!")
        } catch (IOException e) {
            e.printStackTrace()
        }
    }
}

tasks.register("genUI", FileGenerator) {
    group = 'Welcome'
    description = 'Produces a world greeting'
    customUiPackagePath = "$projectDir/src/main/java/com/nicklasslagbrand/baseline/{ID}"
    uiPlaceholderPath = "$projectDir/src/main/java/com/nicklasslagbrand/baseline/feature/{ID}"
    domainPlaceholderPath = "$projectDir/src/main/java/com/nicklasslagbrand/baseline/feature/{ID}"
    testViewModelPlaceholderPath = "$projectDir/src/main/java/com/nicklasslagbrand/baseline/feature/{ID}"
    testUseCasePlaceholderPath = "$projectDir/src/main/java/com/nicklasslagbrand/baseline/feature/{ID}"
    featureName = "MyPlaceholderFeature"
}



